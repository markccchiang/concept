#!/bin/bash

# This script performs a drift test of the N-body code by comparison with
# Gadget. ICs are generated, containing 4 particles placed symmetrically
# in the yz-plane so that no net forces exist (due to mirror images). A
# initial velocity in the x-direction is given. The particles will pass
# through the periodic edge of the box during the simulation.

# Set up error trapping
ctrl_c()
{
    trap : 0
    exit 2
}
abort()
{
    printf "\e[1m\e[91mAn error occurred during drift test!\e[0m\n" >&2
    exit 1
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Load paths from the .paths file
this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
curr="${this_dir}"
while [ 1 ]; do
    if [ -f "${curr}/.paths" ]; then
        source "${curr}/.paths"
        break
    fi
    if [ "${curr}" == "/" ]; then
        exit 1
    fi
    curr="`dirname \"${curr}\"`"
done

# Create the Ewald grid using Cython, if it does not already exist
${run} -n 4 -p "${this_dir}/params" --exit

# Generate ICs
${run} -n 1 -p "${this_dir}/params" -m "${this_dir}/generate_IC.py" --pure-python

# Run ICs through the N-body code
${run} -n 1 -p "${this_dir}/params"

# Run ICs through Gadget2
"${python}" -c "import numpy as np; np.savetxt('${this_dir}' + '/outputlist', np.linspace(0.03, 1, 25))"
cp "${this_dir}/Makefile_gadget" "${Gadget2_dir}/Makefile"
cd "${Gadget2_dir}"
make clean
make
"${mpiexec}" -n 1 --prefix "${openmpi_dir}" Gadget2 "${this_dir}/params_gadget"

# Analyze the output snapshots
${run} -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python 2>/dev/null

# Test run complete. Deactivate trap before exiting.
trap : 0
printf "\e[1m\e[92mDrift test ran successfully\e[0m\n"

