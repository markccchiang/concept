# This is a parameterfile to the CONCEPT code.
# Parameters can be specified as any valid Python3 expression.
# NumPy functions and constants as well as units defined in the units module
# may be used. Absolute paths defined in the .paths file may be used via the
# paths dict.
# For more information about the different parameters,
# see the bottom of this file.

# Input/output
IC_file = 'ICs/default'				# Initial condition snapshot
snapshot_type = 'standard'			# Type of output snapshot
output_dirs = {					# Directories for storing output
    'snapshot' : 'output',
    'powerspec': 'output',
    'render'   : 'output',
               }
output_bases = {				# File basenames for output
    'snapshot' : 'snapshot',
    'powerspec': 'powerspec',
    'render'   : 'render',
                }
output_times = {				# Times at which to dump output
    'snapshot'       : '',
    'powerspec'      : '',
    'render'         : linspace(0, 1, 20),
    'terminal render': linspace(0, 1, 20),
                }

# Numerical parameters
boxsize          = 16/0.7*Mpc			# Linear size of the simulation box
ewald_gridsize   = 64				# Linear size of the grid of Ewald corrections
PM_gridsize      = 64				# Linear size of the grid used for the PM method
P3M_scale        = 1.25				# The long/short-range force split scale
P3M_cutoff       = 4.8				# Maximum reach of short-range force
softeningfactors = {				# The amount of gravitational softening for each species
    'dark matter': 0.03,
    'dark energy': 0,
                    }	
Δt_factor = 0.01				# The time step size

# Cosmological parameters
H0      = 70*km/s/Mpc				# The Hubble constant
Ωm      = 0.3					# Density parameter for matter
ΩΛ      = 0.7					# Density parameter for dark energy
a_begin = 0.02					# Scale factor at beginning of simulation

# Graphics
color               = 'lime'			# Color of the particles as an RGB triple
bgcolor             = 'black'			# Color of the background as a string
resolution          = 1080			# The height and width of the render
liverender          = ''			# Filename of saved live render
remote_liverender   = ''			# Where to upload the live frame
terminal_colormap   = 'gnuplot2'		# The matplotlib colormab to use for the terminal render
terminal_resolution = 80			# The width of the terminal render

# Simulation options
kick_algorithms = {'dark matter': 'PM',	# The algorithm which should be used to kick each species
                   'dark energy': '',
                   }
use_Ewald = True				# Turn Ewald corrections on or off





###############################################
# Additional information about the parameters #
###############################################

################
# Input/output #
################
# IC_file
#     Path to the file containing the initial conditions for the simulation.
#     This is just a regular snapshot, either of the codes own HDF5 type or
#     of the GADGET2 2 type.
# snapshot_type
#     Determines the type of the produced snapshots. Can be either 'standard'
#     or 'GADGET 2', referring to the codes own HDF5 snapshot type and
#     Gadget2's snapshot type 2, respectively.
# snapshot_dir
#     Path (absolute or relative to the concept directory) to the directory
#     where output snapshots should be stored.
# snapshot_base
#     File basename (prefix) for the produced snapshots.
# snapshot_times
#     Tuple of values of the scale factor, for which to dump a snapshot to
#     disk. The minimum value should be larger than a_begin. Use an empty
#     tuple if no snapshots should be produced.
# powerspec_dir
#     Path (absolute or relative to the concept directory) to the directory
#     where output power spectrums should be stored.
# powerspec_base
#     File basename (prefix) for the produced power spectra.
# powerspec_times
#     Tuple of values of the scale factor, for which to compute and dump a power
#     spectrum to disk. The minimum value should be larger than a_begin. Use an
#     empty tuple if no power spectra should be produced.

########################
# Numerical parameters #
########################
# boxsize
#     The linear size of the simulated cubic box. The simulated volume is
#     then boxsize**3. Remember to provide the unit explicitly!
# ewald_gridsize
#     Linear size of the grid of Ewald corrections. A total of
#     ewald_gridsize**3 Ewald corrections will be tabulated and stored
#     in the file .ewald_gridsize="ewald_gridsize".hdf5
# PM_gridsize
#     Linear size of the mesh used for the PM method. There will then be a
#     total of PM_gridsize**3 mesh points within the simulated box.
# P3M_scale
#     The scale of the gravitational force split into a long-range
#     and a short-range component, given in units of the size of a PM cell.
#     In Gadget the standard value for this is 1.25.
# P3M_cutoff
#     Beyond the distance P3M_cutoff*P3M_scale (in units of PM cells),
#     the short-range force is ignored. Gadget uses a value of 4.5.
#     A value of 4.8 guarantees that the unaccounted part of the force
#     is less than 1% of the total force.
# softeningfactors
#     Dictionary mapping names of species to their respective gravitational
#     softening. The values given correspond to radius of the softening
#     Plummer sphere, in units of the mean interparticle
#     distance (boxsize/N**(1/3)).
# Δt_factor
#     The time step size at any time, given in units of the instantaneous age
#     of the universe.

###########################
# Cosmological parameters #
###########################
# H0
#     The Hubble parameter at the present time (a = 1).
#     Remember to provide the unit explicitly! This should match the
#     corresponding value in IC_file!
# Ωm
#     The matter (baryonic + dark) density parameter at the
#     present time (a = 1). This should match the corresponding
#     value in IC_file!
# ΩΛ
#     The dark energy density parameter at the present time (a = 1).
#     This should match the corresponding value in IC_file!
# a_begin
#     The value of the scale factor at the beginning of the simulation.
#     This should match the value scale factor value in IC_file!

############
# Graphics #
############
# frame_dir
#     Use empty string to not save the frames.
# liveframe
#     The filename can be with the .png extension or without any extension.
#     Use an empty string to disable this feature.
# image_format
#     Supported formats are 'jpeg', 'jpg', 'png', 'tif' and 'tiff'.
# color
#     Tuple of RGB values, each ranging from 0 to 1.
# bgcolor
#     The background color of the particle render, given as a color
#     name (e.g. 'black').
# resolution
#    The height and width of the images, measured in pixels.
#    Note that the images will always be square.
# remote_liveframe
#     This should either be of the form 'user@host:/path/to/liveframe.ext' or
#     'user@host:/path/to/'. In the latter case, the remote file will have
#     the same name as the local file. 
#     The live frame can not be uploaded if liveframe is disabled.
#     Use an empty string to disable this feature.
# protocol
#     Can be either 'scp' or 'sftp'.

######################
# Simulation options #
######################
# kick_algorithms
#     Algorithms include 'PP', 'PM' and 'P3M'.
# use_Ewald
#     If set to False, no Ewald corrections will be computed in the PP
#     algorithm, removing the periodicity of gravity.

