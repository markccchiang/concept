#!/usr/bin/env bash

# This file is part of CONCEPT, the cosmological N-body code in Python.
# Copyright (C) 2015 Jeppe Mosgard Dakin.
#
# CONCEPT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CONCEPT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CONCEPT. If not, see http://www.gnu.org/licenses/
#
# The auther of CONCEPT can be contacted at
# jeppe.mosgaard.dakin(at)post.au.dk
# The latest version of CONCEPT is available at
# https://github.com/jmd-dk/concept/



# This script takes in the path of a snapshot or a directory containing
# snapshots as the first argument, and 
# Given the path to a snapshot, a plot of the snapshot will be rendered and saved into
# utilities/plots. Given a directory path, all snapshots within the directory will be
# plotted and saved this way.

# Absolute paths to this file and its directory
this_file="$(readlink -f "${BASH_SOURCE[0]}")"
this_dir="$(dirname "${this_file}")"

# Set up error trapping
ctrl_c()
{
    trap : 0
    exit 2
}
abort()
{
    colorprint "An error occurred while using the \"$(basename ${this_file})\" utility!" "red"
    exit 1
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Source the run script
source "${this_dir}/../run"

# Default values of command-line arguments
nprocs=1
renderparams="${this_file}.params"

# Use Python's argparse module to handle command-line arguments
args=($(${python} -B -c "
import argparse
import sys
from os.path import basename, dirname
# Enables Python to write directly to screen when asked for help
if any(h in sys.argv for h in ['-h', '--he', '--hel', '--help']):
    sys.stdout = sys.stderr
# Set the filename of the script
sys.argv[0] = '${this_file}'
# Setup command-line arguments
parser = argparse.ArgumentParser(description='Run the CONCEPT code.')
parser.add_argument('path',
                    help='path to snapshot or directory of snapshots',
                    type=str,
                    )
parser.add_argument('-n', '--nprocs',
                    help='number of processes',
                    type=int,
                    default=${nprocs},
                    )
parser.add_argument('-p', '--params',
                    help='render parameterfile to use',
                    default='${renderparams}',
                    )
args = parser.parse_args()
# Print out the arguments.
# These will be captured in the bash 'args' variable
print(args.path,
      args.nprocs,
      args.params
      )
" "$@"))
path="${args[0]}"
nprocs="${args[1]}"
renderparams="${args[2]}"
if [ "${#args[@]}" -ne 3 ]; then
    exit 1
fi

# Convert the supplied paths to an absolute paths
path="$(absolute ${path})"
renderparams="$(absolute ${renderparams})"

# Make temporary parameter file based on the short version
# parameter file that goes together with this script.
printf "
# Input/output
IC_file = ''
snapshot_type = 'default'
output_dirs = {
    'snapshot':  '',
    'powerspec': '',
    'render':    '',
               }
output_bases = {
    'snapshot':  '',
    'powerspec': '',
    'render':    '',
                }
output_times = {
    'snapshot':  (),
    'powerspec': (),
    'render':    (),
                }

# Numerical parameters
boxsize = 1
ewald_gridsize = 1
PM_gridsize = 1
P3M_scale = 1
P3M_cutoff = 1
softeningfactors = {'dark matter': 1,
                    'dark energy': 1,
                    }
Δt_factor = 1

# Cosmological parameters
H0 = 1
Ωm = 1
ΩΛ = 1
a_begin = 0

# Graphics
liverender=''
$(cat "${renderparams}")
remote_liverender=''
protocol = ''

# Simulation options
kick_algorithms = {}
use_Ewald = False

# Secret parameter
special_params = {
    'special':  'render',
    'path':     '${path}',
           }
" > "${this_file}.params.full"

# Run CONCEPT to produce the renders
"${run}" -n ${nprocs} -p "${this_file}.params.full" --local --keep-mode

# Cleanup
rm "${this_file}.params.full"

# Exit gracefully
trap : 0

