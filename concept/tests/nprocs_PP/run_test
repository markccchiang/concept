#!/bin/bash

# This script runs the same, random initial conditions with different numbers
# of processes and compares the result. The PP algorithm is used.

# The name of this test (the directory name)
this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
test_name=$(basename "${this_dir}")

# Set up error trapping
ctrl_c()
{
    trap : 0
    exit 2
}
abort()
{
    printf "\e[1m\e[91mAn error occurred during ${test_name} test!\e[0m\n" >&2
    exit 1
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Load paths from the .paths file
curr="${this_dir}"
while [ 1 ]; do
    if [ -f "${curr}/.paths" ]; then
        source "${curr}/.paths"
        break
    fi
    if [ "${curr}" == "/" ]; then
        exit 1
    fi
    curr="`dirname \"${curr}\"`"
done

# Create list of output times, used by both CONCEPT and GADGET
"${python}" -c "import numpy as np; np.savetxt('${this_dir}' + '/outputlist', np.linspace(0.03, 1, 2))"

# Create the Ewald grid using Cython, if it does not already exist
# (for fast IC generation).
"${run}" -n 1 -p "${this_dir}/../basic/params" --local

# Generate ICs
"${run}" -n 1 -p "${this_dir}/params" -m "${this_dir}/generate_IC.py" --pure-python --local

# Run the CONCEPT code on the generated ICs
"${run}" -n 1 -p "${this_dir}/params" --local
rm -rf "${this_dir}/output_1"
mv "${this_dir}/output" "${this_dir}/output_1"
"${run}" -n 2 -p "${this_dir}/params" --local
rm -rf "${this_dir}/output_2"
mv "${this_dir}/output" "${this_dir}/output_2"
"${run}" -n 4 -p "${this_dir}/params" --local
rm -rf "${this_dir}/output_4"
mv "${this_dir}/output" "${this_dir}/output_4"
"${run}" -n 8 -p "${this_dir}/params" --local
rm -rf "${this_dir}/output_8"
mv "${this_dir}/output" "${this_dir}/output_8"

# Analyze the output snapshots
"${run}" -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python --local

# Copy the tabulated Ewald corrections to the Gadget2 directory if it does not
# already exists there, to save time later.
if [ ! -f "${Gadget2_dir}/ewald_spc_table_64.dat" ]; then
    cp "${Gadget2_local_dir}/ewald_spc_table_64.dat" "${Gadget2_dir}/ewald_spc_table_64.dat"
fi

# Test run complete. Deactivate trap before exiting.
trap : 0
printf "\e[1m\e[92m${test_name^} test ran successfully\e[0m\n"

