#!/usr/bin/env bash

# This file is part of CO𝘕CEPT, the cosmological 𝘕-body code in Python.
# Copyright © 2015-2016 Jeppe Mosgaard Dakin.
#
# CO𝘕CEPT is free software: You can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CO𝘕CEPT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CO𝘕CEPT. If not, see http://www.gnu.org/licenses/
#
# The auther of CO𝘕CEPT can be contacted at dakin(at)phys.au.dk
# The latest version of CO𝘕CEPT is available at
# https://github.com/jmd-dk/concept/



# This script performs a comparison test between the CO𝘕CEPT code's
# P3M implementation and the GADGET code's TreePM implementation.

# Initialize test environment
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
source "${this_dir}/../environment"

# Cleanup from last test run
"${this_dir}/clean"

# Create list of output times, used by both CO𝘕CEPT and GADGET
"${python}" -c "import numpy as np; np.savetxt('${this_dir}' + '/outputlist', (0.1, 0.5, 1))"

# Generate ICs
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/generate_IC.py" --pure-python --local

# Run the CO𝘕CEPT code on the generated ICs
rm -f "${concept_dir}/.fftw_wisdom_gridsize=32_nprocs=1"
"${concept}" -n 1 -p "${this_dir}/params" --local

# Create an edited version of Makefile_gadget with correct parth information
cp "${this_dir}/Makefile_gadget" "${this_dir}/Makefile_gadget_edited"
sed -i "/^ *CC= / s/ [^# ]/ \"${mpicc//\//\\/}\"/" "${this_dir}/Makefile_gadget_edited"
path="${mpi_dir}/include"
sed -i "/^ *MPI_INCL= / s/ [^# ]/ \"-I${path//\//\\/}\" -Wl,\"-rpath=${path//\//\\/}\"/"  \
       "${this_dir}/Makefile_gadget_edited"
path="${mpi_dir}/lib"
sed -i "/^ *MPI_LIBS= / s/ [^# ]/ \"-L${path//\//\\/}\" -Wl,\"-rpath=${path//\//\\/}\"/"  \
       "${this_dir}/Makefile_gadget_edited"
path="${gsl_dir}/include"
sed -i "/^ *GSL_INCL= / s/ [^# ]/ \"-I${path//\//\\/}\" -Wl,\"-rpath=${path//\//\\/}\"/"  \
       "${this_dir}/Makefile_gadget_edited"
path="${gsl_dir}/lib"
sed -i "/^ *GSL_LIBS= / s/ [^# ]/ \"-L${path//\//\\/}\" -Wl,\"-rpath=${path//\//\\/}\"/"  \
       "${this_dir}/Makefile_gadget_edited"
path="${fftw_for_gadget_dir}/include"
sed -i "/^ *FFTW_INCL= / s/ [^# ]/ \"-I${path//\//\\/}\" -Wl,\"-rpath=${path//\//\\/}\"/" \
       "${this_dir}/Makefile_gadget_edited"
path="${fftw_for_gadget_dir}/lib"
sed -i "/^ *FFTW_LIBS= / s/ [^# ]/ \"-L${path//\//\\/}\" -Wl,\"-rpath=${path//\//\\/}\"/" \
       "${this_dir}/Makefile_gadget_edited"

# Make a local copy of the files in the GADGET2 directory
# and copy the edited Makefile.
Gadget2_local_dir="${this_dir}/Gadget2_local"
mkdir -p "${Gadget2_local_dir}"
cp "${Gadget2_dir}/"* "${Gadget2_local_dir}" || :
cp "${this_dir}/Makefile_gadget_edited" "${Gadget2_local_dir}/Makefile"

# Build Gadget and run simulation based on the ICs.
# Note that it is crucial to use a relative path to the parameter file
# as the path has a maximum allowed length in GADGET.
(cd "${Gadget2_local_dir}" && make clean \
                           && make       \
                           && "${mpiexec}" -n 1 "${Gadget2_local_dir}/Gadget2" ../params_gadget)

# Analyze the output snapshots
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python --local

# Finalize test environment
test_done=true source "${this_dir}/../environment"

