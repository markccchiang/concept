#!/usr/bin/env bash

# This file is part of CO𝘕CEPT, the cosmological 𝘕-body code in Python.
# Copyright © 2015 Jeppe Mosgaard Dakin.
#
# CO𝘕CEPT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CO𝘕CEPT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CO𝘕CEPT. If not, see http://www.gnu.org/licenses/
#
# The auther of CO𝘕CEPT can be contacted at
# jeppe.mosgaard.dakin(at)post.au.dk
# The latest version of CO𝘕CEPT is available at
# https://github.com/jmd-dk/concept/



# This utility prints out information about snapshots.
# More specifically, it prints the meta data contained in the snapshot.
# That is, everything except the actual particle data.
# Run this script by invoking the concept script with the
# --util snapshot_info path
# option, where path is the path to snapshot file
# or a directory containing snapshots.

# Absolute paths to this file and its directory
this_file="$(readlink -f "${BASH_SOURCE[0]}")"
this_dir="$(dirname "${this_file}")"

# Set up error trapping
ctrl_c()
{
    trap : 0
    exit 2
}
abort()
{
    colorprint "An error occurred while using the \"$(basename ${this_file})\" utility!" "red"
    exit 1
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Source the concept script
source "${this_dir}/../concept"

# Command-line arguments are exported to this script. Handle flag-arguments
pure_python_flag=""
if [ "${pure_python}" == "True" ]; then
    pure_python_flag="--pure-python"
fi

# Check for required positional arguments
if [ "$#" -lt 1 ] || [ -z "$1" ]; then
    colorprint "Error: The $(basename ${this_file}) utility is missing a required argument: path" "red"
    exit 1
fi
path="$1"
if [ "$#" -gt 1 ]; then
    badvars=""
    for badvar in ${@:2}; do
        badvars="${badvars}, \"${badvar}\""
    done
    badvars="${badvars:2}"
    colorprint "Warning: The following arguments will be ignored by the $(basename ${this_file}) utility:" "red"
    colorprint "${badvars}" "red"
fi

# Convert to absolute path
path="$(absolute ${path})"

# Does the path exist?
if [ ! -f "${path}" ] && [ ! -d "${path}" ]; then
    colorprint "Error: The path \"${path}\" does not exist!" "red"
    exit 1
fi

# Make temporary parameter file with every information needed
printf "special_params = {
    'special': 'snapshot_info',
    'path'   : '${path}',
                  }
" > "${this_file}.params.full"

# Run CO𝘕CEPT to printout the snapshot information. Always run locally using 1 process
"${concept}" -m ${main} -n 1 -p "${this_file}.params.full" --local ${pure_python_flag}

# Cleanup
rm "${this_file}.params.full"

# Exit gracefully
trap : 0

