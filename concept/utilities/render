#!/usr/bin/env bash

# This file is part of CONCEPT, the cosmological N-body code in Python.
# Copyright (C) 2015 Jeppe Mosgard Dakin.
#
# CONCEPT is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CONCEPT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CONCEPT. If not, see http://www.gnu.org/licenses/
#
# The auther of CONCEPT can be contacted at
# jeppe.mosgaard.dakin(at)post.au.dk
# The latest version of CONCEPT is available at
# https://github.com/jmd-dk/concept/



# This script takes in the path of a snapshot or a directory containing snapshots as an argument.
# Given the path to a snapshot, a plot of the snapshot will be rendered and saved into
# utilities/plots. Given a directory path, all snapshots within the directory will be
# plotted and saved this way.

# The name of this test (the directory name)
this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Set up error trapping
ctrl_c()
{
    trap : 0
    exit 2
}
abort()
{
    printf "\e[1m\e[91mAn error occurred during plotting!\e[0m\n" >&2
    exit 1
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Argument check
if [ "$#" -gt 1 ]; then
    echo "Too many arguments supplied."
    exit 1
elif [ "$#" -lt 1 ]; then
    echo "You must pass in the path to a snapshot or a directory containing snapshots."
    exit 1
fi
path="$1"
path="${path//[ ]/\\ }"        # Places backslashes before spaces. These are needed when expanding tilde, but they will not persist!
eval path="${path}"            # Expand tilde
path=$(readlink -f "${path}")  # Convert to absolute path

# Load paths from the .paths file
curr="${this_dir}"
while :; do
    if [ -f "${curr}/.paths" ]; then
        source "${curr}/.paths"
        break
    fi
    if [ "${curr}" == "/" ]; then
        printf "\e[1m\e[91mCould not find the .paths file!\e[0m\n" >&2
        exit 1
    fi
    curr="$(dirname "${curr}")"
done

# Make temporary parameter file
printf "
import numpy as np
# Input/output
IC_file = ''
snapshot_type = 'default'
output_dirs = {
    'snapshot':  '',
    'powerspec': '',
    'render':    '',
               }
output_bases = {
    'snapshot':  '',
    'powerspec': '',
    'render':    '',
                }
output_times = {
    'snapshot':  (),
    'powerspec': (),
    'render':    (),
                }

# Numerical parameters
boxsize = 8*Mpc/0.7
ewald_gridsize = 1
PM_gridsize = 1
P3M_scale = 1
P3M_cutoff = 1
softeningfactors = {'dark matter': 1,
                    'dark energy': 1,
                    }
Δt_factor = 1

# Cosmological parameters
H0 = 1
Ωm = 1
ΩΛ = 1
a_begin = 0

# Graphics
liverender=''
color = 'g'
bgcolor = 'black'
resolution = 1080
remote_liverender=''
protocol = ''

# Simulation options
kick_algorithms = {}
use_Ewald = False

# Secret parameter
special_params = {
    'special':  'render',
    'path': '${path}',
           }
" > "${this_dir}/plot.params"

# Run CONCEPT to produce the renders
"${run}" -n 1 -p "${this_dir}/plot.params" --local

# Cleanup
rm "${this_dir}/plot.params"

# Plot complete. Deactivate trap before exiting
trap : 0

