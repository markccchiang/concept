#!/bin/bash

# This script performs a basic test of the CONCEPT code.
# It runs the code with the --exit option in both compiled
# and pure Python mode.


# The name of this test (the directory name)
this_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
test_name=$(basename "${this_dir}")

# Set up error trapping
ctrl_c()
{
    trap : 0
    exit 2
}
abort()
{
    printf "\e[1m\e[91mAn error occurred during ${test_name} test!\e[0m\n" >&2
    exit 1
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Load paths from the .paths file
curr="${this_dir}"
while [ 1 ]; do
    if [ -f "${curr}/.paths" ]; then
        source "${curr}/.paths"
        break
    fi
    if [ "${curr}" == "/" ]; then
        printf "\e[1m\e[91mCould not find the .paths file!\e[0m\n" >&2
        exit 1
    fi
    curr="`dirname \"${curr}\"`"
done

# Clean and run in pure Python with different number of cpus
(cd "${concept_dir}" && make distclean)
"${run}" -p "${this_dir}/params_pure_python" --pure-python --local
"${run}" -n 1 -p "${this_dir}/params_pure_python" --pure-python --local
"${run}" -n 2 -p "${this_dir}/params_pure_python" --pure-python --local
"${run}" -n 4 -p "${this_dir}/params_pure_python" --pure-python --local

# Build and run in compiled mode with different number of cpus
"${run}" -p "${this_dir}/params" --local
"${run}" -n 1 -p "${this_dir}/params" --local
"${run}" -n 2 -p "${this_dir}/params" --local
"${run}" -n 4 -p "${this_dir}/params" --local

# Do cleanup before exiting
(cd "${concept_dir}" && make distclean)

# Test run complete. Deactivate trap before exiting.
trap : 0
printf "\e[1m\e[92m${test_name^} test ran successfully\e[0m\n"

